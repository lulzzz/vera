using System.Threading.Tasks;
using Vera.Germany.Fiskaly;
using Vera.Models;
using Vera.Registers;

namespace Vera.Germany
{
    /// <summary>
    /// Initialize a register by setting open status.
    /// As a side effect for Germany, it ensures that the current supplier has a valid TSS.
    /// </summary>
    public class GermanyRegisterInitializer : IRegisterInitializer
    {
        private IFiskalyClient _fiskalyClient;

        public GermanyRegisterInitializer(IFiskalyClient fiskalyClient)
        {
            _fiskalyClient = fiskalyClient;
        }

        public Task Initialize(Register register)
        {
            var tssId = EnsureTss(register.SupplierId.ToString());
            EnsureClient(register.Id.ToString(), tssId);

            register.Status = RegisterStatus.Open;

            return Task.CompletedTask;
        }

        /// <summary>
        /// Ensure a tss for supplier
        /// </summary>
        /// <param name="supplierId">The internal id of the supplier</param>
        /// <returns>The external '_id' generated by FiskalyService.</returns>
        private string EnsureTss(string supplierId)
        {
            var tssModelResponse = _fiskalyClient.GetTss(supplierId);
            if (tssModelResponse == null)
            {
                _fiskalyClient.CreateTss(new CreateTssModel
                {
                    TssId = supplierId,
                    TssState = TssState.INITIALIZED
                });

                tssModelResponse = _fiskalyClient.GetTss(supplierId);
            }

            return tssModelResponse._id;
        }

        /// <summary>
        /// Ensure a client for the register
        /// </summary>
        /// <param name="registerId">The internal register id.</param>
        /// <param name="tssId">The external '_id' that FiskalyService has generated.</param>
        private void EnsureClient(string registerId, string tssId)
        {
            var clientModelResponse = _fiskalyClient.GetClient(registerId, tssId);
            if (clientModelResponse == null)
            {
                _fiskalyClient.CreateClient(new CreateClientModel
                {
                    TssId = tssId,
                    ClientId = registerId,
                    SerialNumber = registerId
                });
            }
        }

        public Task Initialize(RegisterInitializationContext context) => throw new System.NotImplementedException();
    }
}
