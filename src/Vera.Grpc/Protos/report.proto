syntax = "proto3";

import "Protos/shared.proto";
import "Protos/productType.proto";
import "google/protobuf/timestamp.proto";

package vera.grpc;

service ReportService {
    rpc GenerateCurrentReport(GenerateCurrentReportRequest) returns (RegisterReport);
    rpc RenderReport(RenderReportRequest) returns (vera.grpc.RenderReportReply);
}

message GenerateCurrentReportRequest {
    string supplierSystemId = 1;
    string registerSystemId = 2;
    string employeeId = 3;
}

message RegisterReport {
	//Timestamp when the report was generated
	google.protobuf.Timestamp timestamp = 1;

    string accountName = 2;
    string taxNumber = 3;

	string supplierId = 4;

    repeated PaymentReport payments = 5;
    repeated TaxReport taxes = 6;
    repeated ProductReport products = 7;
	repeated EmployeePaymentsReport employeePayments = 8;

    DiscountReport discount = 9;
    ReturnReport Return = 10;
    TotalsReport Totals = 11;

    // Report number that has been assigned to the report
    string number = 12;

    // Sequence number of the report
    int32 sequence = 13;

    vera.grpc.shared.Signature signature = 14;
}

message PaymentReport {
    vera.grpc.shared.PaymentCategory category = 1;
    int32 count = 2;
    vera.grpc.shared.DecimalValue amount = 3;
}

message TaxReport {
    vera.grpc.shared.TaxCategory category = 1;
    vera.grpc.shared.DecimalValue rate = 2;
    vera.grpc.shared.DecimalValue amount = 3;
}

message ProductReport {
    vera.grpc.productType.ProductType type = 1;
    int32 count = 2;
    vera.grpc.shared.DecimalValue amount = 3;
}

message EmployeePaymentsReport {
    EmployeeReport employee = 1;
    PaymentReport payment = 2;
}

message EmployeeReport {
    string systemId = 1;
    string firstName = 2;
    string lastName = 3;
}

message DiscountReport {
    int32 count = 1;
    vera.grpc.shared.DecimalValue amount = 2;
}

message ReturnReport {
    int32 count = 1;
    vera.grpc.shared.DecimalValue amount = 2;
}

message TotalsReport {
    vera.grpc.shared.DecimalValue cash = 1;
    vera.grpc.shared.DecimalValue gross = 2;
    vera.grpc.shared.DecimalValue return = 3;
    vera.grpc.shared.DecimalValue net = 4;
}


message RenderReportRequest {
	// Number of the report to generate the data for
	string reportNumber = 1;

	// Type specifies the output type that the client is requesting
	ReportOutputType type = 2;
}

message RenderReportReply {
	string token = 1;

	// Type of the output as requested in the RenderReportRequest
	ReportOutputType type = 2;

	// Content of the report in the requested type
	bytes content = 3;
}

enum ReportOutputType {
	// Output the report as a tree of commands that can be converted to the actual representation of the receipt
	JSON = 0;

	// Output as raw text, useful for debugging
	TEXT = 1;

	// Output as bytes that can directly be send to an Epson thermal printer
	ESC = 2;
}
