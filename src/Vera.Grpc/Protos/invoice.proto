syntax = "proto3";

import "Protos/shared.proto";
import "Protos/supplier.proto";
import "google/protobuf/timestamp.proto";

package vera.grpc;

service InvoiceService {
    rpc Create(CreateInvoiceRequest) returns (CreateInvoiceReply);
    rpc GetByNumber(GetInvoiceByNumberRequest) returns (GetInvoiceReply);
    rpc Validate(ValidateInvoiceRequest) returns (ValidateInvoiceReply);
}

message CreateInvoiceRequest {
    Invoice invoice = 1;
}

message CreateInvoiceReply {
    // Invoice number that has been assigned to the invoice
    string number = 1;

    // Sequence number of the invoice
    int32 sequence = 2;

    Signature signature = 3;
}

message GetInvoiceByNumberRequest {
    string accountId = 1;
    string number = 2;
}

message GetInvoiceReply {
    // TODO(kevin): extend this to return the full invoice?
    string number = 1;
    vera.grpc.shared.Supplier supplier = 2;
    string periodId = 3;
}

message ValidateInvoiceRequest {
    string accountId = 1;
    Invoice invoice = 2;
}

message ValidateInvoiceReply {
    map<string, string> results = 1;
}

// Signature captures the in-/output of the signing of the invoice
message Signature {
    // Input is the data that was used to create the resulting signature, which
    // can be found in the output
    bytes input = 1;

    // Output is the actual signed data
    bytes output = 2;
}

message Invoice {
    string account = 1;
    
    // Identifier of the invoice in the external system
    string systemId = 2;
    
    // Identifier of the supplier whom the invoice should be created
    string supplierSystemId = 3;
    
    // Identifier of the "cash register" that performed the transaction
    string registerId = 4;
    
    // Indicates if this invoice was created manually
    bool manual = 5;
    
    // Fiscal period that this invoice was generated
    int32 period = 6;

    // Fiscal year that this invoice was generated
    int32 periodYear = 7;
    
    // Timestamp that the invoice was invoiced
    google.protobuf.Timestamp timestamp = 8;

    string remark = 9;

    Customer customer = 10;
    Employee employee = 11;

    repeated InvoiceLine lines = 12;
    repeated Settlement settlements = 13;
    repeated Payment payments = 14;
}

message InvoiceLine {
    // Associated product that was sold
    Product product = 1;

    // Description of the line, e.g what was sold or what service was performed
    string description = 2;

    // Quantity that was invoiced
    int32 quantity = 3;

    // Unit of measure
    string unit = 4;

    // Gross price per unit
    vera.grpc.shared.DecimalValue unitPrice = 5;

    TaxValue tax = 8;

    repeated Settlement settlements = 9;

    CreditReference creditReference = 10;
}

message Settlement {
    string systemId = 1;

    // Description of the given discount
    string description = 2;

    // Amount of discount that was given
    vera.grpc.shared.DecimalValue amount = 3;
}

message Payment {
    enum Category {
        OTHER = 0;
        DEBIT = 1;
        CREDIT = 2;
        CASH = 3;
        CHANGE = 4;
        VOUCHER = 5;
        ONLINE = 6;
    }

    string systemId = 1;

    // Timestamp of the transaction
    google.protobuf.Timestamp timestamp = 2;
    
    // Description of the payment, e.g "Mastercard"
    string description = 3;
    
    // Amount that was paid
    vera.grpc.shared.DecimalValue amount = 4;
    
    Category category = 5;
}

message Customer {
    string systemId = 1;
    
    string firstName = 2;
    string lastName = 3;
    
    string email = 4;
    
    string companyName = 5;
    string registrationNumber = 6;
    string taxRegistrationNumber = 7;
    
    vera.grpc.shared.Address billingAddress = 8;
    vera.grpc.shared.Address shippingAddress = 9;
}

message Employee {
    string systemId = 1;
    
    string firstName = 2;
    string lastName = 3;
}

message Product {
    enum Type {
        // Generic fallback value. Please use the most specific value for the product.
        OTHER = 0;
        
        // Generic fallback for goods. Please use the most specific value for the product.
        GOODS = 1;
        
        // Gift card product. Used to purchase stuff at a later point in time.
        GIFT_CARD = 2;
    }

    string systemId = 1; 
    
    // Article code of the product as used by the merchant
    string code = 2;
    
    // Barcode of the product
    string barcode = 3;

    // Description of the product
    string description = 4;
    
    // Type of the product. Some type of products like gift cards require special handling
    Type type = 5;
}

message TaxValue {
    enum Category {
        // Also called the standard tax rate.
        HIGH = 0;

        // Also called the reduced tax rate.
        LOW = 1;

        // 0% rate
        ZERO = 2;

        // 0% rate because of an exemption.
        EXEMPT = 3;

        // Intermediate rate that some countries use like Portugal. It's in between HIGH and LOW.
        INTERMEDIATE = 4;
    }

    vera.grpc.shared.DecimalValue rate = 1;
    string code = 2;
    Category category = 3;

    string exemptionCode = 4;
    string exemptionReason = 5;
}

message CreditReference {
    string number = 1;
    string reason = 2;
}