syntax = "proto3";

import "Protos/shared.proto";

package vera.grpc;

service ReceiptService {
    // Invoked to render a thermal receipt for the given invoice
    rpc RenderThermal (RenderThermalRequest) returns (RenderThermalReply);

    // Invoked to update the result of an invoke to render a thermal earlier
    rpc UpdatePrintResult (UpdatePrintResultRequest) returns (vera.grpc.shared.Empty);
}

message RenderThermalRequest {
    string accountId = 1;

    // Number of the invoice to generate the thermal receipt for
    string invoiceNumber = 2;

    // Type specifies the output type that the client is requesting
    ReceiptOutputType type = 3;
}

message RenderThermalReply {
    string token = 1;

    // Type of the output as requested in the RenderThermalRequest
    ReceiptOutputType type = 2;

    // Content of the thermal receipt in the requested type
    bytes content = 3;
}

message UpdatePrintResultRequest {
    string accountId = 1;
    string token = 2;
    bool success = 3;
}

enum ReceiptOutputType {
    // Output the receipt as a tree of commands that can be converted to the actual representation of the receipt
    JSON = 0;

    // Output as raw text, useful for debugging
    TEXT = 1;

    // Output as bytes that can directly be send to an Epson thermal printer
    ESC = 2;
}