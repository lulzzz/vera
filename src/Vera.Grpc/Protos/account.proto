syntax = "proto3";

import "Protos/shared.proto";

package vera.grpc;

service AccountService {
    rpc Create (CreateAccountRequest) returns (CreateAccountReply);
    rpc Get (GetAccountRequest) returns (GetAccountReply);
    rpc Update (UpdateAccountRequest) returns (vera.grpc.shared.Empty);
    rpc CreateOrUpdateConfiguration (AccountConfigurationRequest) returns (vera.grpc.shared.Empty);
    rpc List (vera.grpc.shared.Empty) returns (ListAccountReply);
}

message CreateAccountRequest {
    string name = 1;
    string certification = 2;

    // Currency code that is used by the account. ISO 4217
    string currency = 3;

    // Contact email address
    string email = 4;

    // Contact telephone number
    string telephone = 5;

    // Registration number of the account. E.g in the Netherlands this would be
    // the KvK number.
    string registrationNumber = 6;

    // VAT registration number of the account
    string taxRegistrationNumber = 7;

    // Address of the account. Where can it be found on the map?
    vera.grpc.shared.Address address = 8;
    
    repeated TaxRate taxRates = 9;
}

message CreateAccountReply {
    string id = 1;
}

message GetAccountRequest {
    string id = 1;
}

message GetAccountReply {
    string id = 1;

    string name = 2;

    // Registration number of the company
    string registrationNumber = 3;

    // Tax registration number of the company
    string taxRegistrationNumber = 4;

    // Location of the company
    vera.grpc.shared.Address address = 5;

    // ISO 4217 of the currency that's used by the company
    string currency = 6;

    // Contact email address
    string email = 7;

    // Contact phone number
    string telephone = 8;
    
    repeated TaxRate taxRates = 9;
}

message UpdateAccountRequest {
    string id = 1;

    string name = 2;

    // Registration number of the company
    string registrationNumber = 3;

    // Tax registration number of the company
    string taxRegistrationNumber = 4;

    // Location of the company
    grpc.shared.Address address = 5;

    // ISO 4217 of the currency that's used by the company
    string currency = 6;

    // Contact email address
    string email = 7;

    // Contact phone number
    string telephone = 8;
}

message AccountConfigurationRequest {
    string id = 1;
    map<string, string> fields = 2;
}

message ListAccountReply {
    message Account {
        string name = 1;
    }

    repeated Account accounts = 1;
}

message TaxRate {
    vera.grpc.shared.DecimalValue rate = 1;
    string code = 2;
    vera.grpc.shared.TaxCategory category = 3;
}



